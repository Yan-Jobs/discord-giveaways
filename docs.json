{
	"id": 0,
	"name": "discord-giveaways",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 221,
			"name": "Giveaway",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 248,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 128,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "new Giveaway",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 250,
									"name": "manager",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2,
										"name": "GiveawaysManager"
									}
								},
								{
									"id": 251,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 401,
										"name": "GiveawayData"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 268,
					"name": "allowedMentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 146,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "MessageMentionOptions"
					}
				},
				{
					"id": 280,
					"name": "bonusEntries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 162,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 143,
							"name": "BonusEntry"
						}
					}
				},
				{
					"id": 273,
					"name": "botsCanWin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 153,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 252,
					"name": "channelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 130,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 253,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 131,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Client"
					}
				},
				{
					"id": 281,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 163,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 401,
						"name": "GiveawayData"
					}
				},
				{
					"id": 277,
					"name": "duration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 159,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 271,
					"name": "embedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 151,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 272,
					"name": "embedColorEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 152,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 254,
					"name": "endAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 132,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 269,
					"name": "endTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 147,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Timeout"
					}
				},
				{
					"id": 255,
					"name": "ended",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 133,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 279,
					"name": "exemptMembersFunction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 161,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Function"
							}
						]
					}
				},
				{
					"id": 270,
					"name": "exemptPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 150,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable"
						}
					}
				},
				{
					"id": 256,
					"name": "guildId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 134,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 257,
					"name": "hostedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 135,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "User"
					}
				},
				{
					"id": 283,
					"name": "isDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 165,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 275,
					"name": "lastChance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 155,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 148,
						"name": "LastChanceOptions"
					}
				},
				{
					"id": 258,
					"name": "manager",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 136,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 2,
						"name": "GiveawaysManager"
					}
				},
				{
					"id": 259,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 137,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Message"
							}
						]
					}
				},
				{
					"id": 260,
					"name": "messageId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 138,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 278,
					"name": "messageURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 160,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 261,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 139,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 195,
						"name": "GiveawaysMessages"
					}
				},
				{
					"id": 263,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 141,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 401,
						"name": "GiveawayData"
					}
				},
				{
					"id": 282,
					"name": "pauseOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 164,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"id": 153,
						"name": "PauseOptions"
					}
				},
				{
					"id": 264,
					"name": "prize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 142,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 274,
					"name": "reaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 154,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "EmojiIdentifierResolvable"
					}
				},
				{
					"id": 276,
					"name": "remainingTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 158,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 265,
					"name": "startAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 143,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 262,
					"name": "thumbnail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 140,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 266,
					"name": "winnerCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 144,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 267,
					"name": "winnerIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 145,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 245,
					"name": "captureRejectionSymbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 273,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 26,
							"name": "captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 246,
					"name": "captureRejections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sets or gets the default captureRejection value for all emitters."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 278,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 247,
					"name": "defaultMaxListeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 279,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 244,
					"name": "errorMonitor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.",
						"text": "Installing a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 272,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 25,
							"name": "errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 313,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 314,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Alias for `emitter.on(eventName, listener)`.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 315,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 316,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 317,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 318,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 319,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 294,
					"name": "edit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 171,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 295,
							"name": "edit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 296,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 385,
										"name": "GiveawayEditOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 362,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 363,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Synchronously calls each of the listeners registered for the event named`eventName`, in the order they were registered, passing the supplied arguments\nto each.",
								"text": "Returns `true` if the event had listeners, `false` otherwise.\n\n```js\nconst EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 364,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 365,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 297,
					"name": "end",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 172,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "end",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 299,
									"name": "noWinnerMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 211,
												"name": "MessageObject"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "GuildMember"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 284,
					"name": "ensureEndTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 167,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "ensureEndTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 383,
					"name": "eventNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 384,
							"name": "eventNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.",
								"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 291,
					"name": "exemptMembers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 170,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "exemptMembers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 293,
									"name": "member",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GuildMember"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 300,
					"name": "fetchMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 173,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "fetchMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Message"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 286,
					"name": "fillInString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 168,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "fillInString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 288,
									"name": "string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 289,
							"name": "fillInString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 290,
									"name": "embed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "MessageEmbed"
											},
											{
												"type": "reference",
												"name": "MessageEmbedOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "MessageEmbed"
									}
								]
							}
						}
					]
				},
				{
					"id": 354,
					"name": "getMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 355,
							"name": "getMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
								"tags": [
									{
										"tag": "since",
										"text": "v1.0.0\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 366,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 367,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the number of listeners listening to the event named `eventName`.",
								"tags": [
									{
										"tag": "since",
										"text": "v3.2.0"
									}
								]
							},
							"parameters": [
								{
									"id": 368,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event being listened for\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 356,
					"name": "listeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 357,
							"name": "listeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`.",
								"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 358,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 341,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 342,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Alias for `emitter.removeListener()`.",
								"tags": [
									{
										"tag": "since",
										"text": "v10.0.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 343,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 344,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 345,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 346,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 347,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 320,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 321,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds the `listener` function to the end of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.",
								"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The`emitter.prependListener()` method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n```js\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.101"
									}
								]
							},
							"parameters": [
								{
									"id": 322,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 323,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 324,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 325,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 326,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 327,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 328,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a **one-time**`listener` function for the event named `eventName`. The\nnext time `eventName` is triggered, this listener is removed and then invoked.",
								"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The`emitter.prependOnceListener()` method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n```js\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.3.0"
									}
								]
							},
							"parameters": [
								{
									"id": 329,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 330,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 331,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 332,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 333,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 308,
					"name": "pause",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 176,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "pause",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 310,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 153,
										"name": "PauseOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 369,
					"name": "prependListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 370,
							"name": "prependListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.",
								"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0"
									}
								]
							},
							"parameters": [
								{
									"id": 371,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 372,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 373,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 374,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 375,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 376,
					"name": "prependOnceListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 377,
							"name": "prependOnceListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.",
								"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0"
									}
								]
							},
							"parameters": [
								{
									"id": 378,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 379,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 380,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 381,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 382,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 359,
					"name": "rawListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 360,
							"name": "rawListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).",
								"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v9.4.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 361,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 348,
					"name": "removeAllListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 349,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Removes all listeners, or those of the specified `eventName`.",
								"text": "It is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 350,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 334,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Removes the specified `listener` from the listener array for the event named`eventName`.",
								"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 336,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 337,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 338,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 339,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 340,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 302,
					"name": "reroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 174,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 303,
							"name": "reroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 304,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 395,
										"name": "GiveawayRerollOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "GuildMember"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 305,
					"name": "roll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 175,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 306,
							"name": "roll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 307,
									"name": "winnerCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "GuildMember"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 351,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 352,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.",
								"text": "Returns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.3.5\n"
									}
								]
							},
							"parameters": [
								{
									"id": 353,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 311,
					"name": "unpause",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 177,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "unpause",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "getEventListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 262,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "getEventListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`.",
								"text": "For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v15.2.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 242,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "DOMEventTarget"
											},
											{
												"type": "reference",
												"name": "EventEmitter"
											}
										]
									}
								},
								{
									"id": 243,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 236,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 234,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 237,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.",
								"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.9.12"
									},
									{
										"tag": "deprecated",
										"text": "Since v3.2.0 - Use `listenerCount` instead."
									}
								]
							},
							"parameters": [
								{
									"id": 238,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The emitter to query"
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter"
									}
								},
								{
									"id": 239,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The event name\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 231,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 217,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "```js\nconst { on, EventEmitter } = require('events');",
								"text": "(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```",
								"returns": "that iterates `eventName` events emitted by the `emitter`\n",
								"tags": [
									{
										"tag": "since",
										"text": "v13.6.0, v12.16.0"
									}
								]
							},
							"parameters": [
								{
									"id": 233,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter"
									}
								},
								{
									"id": 234,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event being listened for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 235,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 222,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 157,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 223,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.",
								"text": "This method is intentionally generic and works with the web platform[EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v11.13.0, v10.16.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 224,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "NodeEventTarget"
									}
								},
								{
									"id": 225,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 226,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 227,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 228,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "DOMEventTarget"
									}
								},
								{
									"id": 229,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 230,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.once"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						248
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						268,
						280,
						273,
						252,
						253,
						281,
						277,
						271,
						272,
						254,
						269,
						255,
						279,
						270,
						256,
						257,
						283,
						275,
						258,
						259,
						260,
						278,
						261,
						263,
						282,
						264,
						274,
						276,
						265,
						262,
						266,
						267,
						245,
						246,
						247,
						244
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						313,
						294,
						362,
						297,
						284,
						383,
						291,
						300,
						286,
						354,
						366,
						356,
						341,
						320,
						327,
						308,
						369,
						376,
						359,
						348,
						334,
						302,
						305,
						351,
						311,
						240,
						236,
						231,
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 127,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EventEmitter"
				}
			]
		},
		{
			"id": 2,
			"name": "GiveawaysManager",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 29,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 23,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "new GiveawaysManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 31,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Client"
									}
								},
								{
									"id": 32,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 159,
										"name": "GiveawaysManagerOptions"
									}
								},
								{
									"id": 33,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 34,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 25,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Client"
					}
				},
				{
					"id": 35,
					"name": "giveaways",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 26,
							"character": 15
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 221,
							"name": "Giveaway"
						}
					}
				},
				{
					"id": 36,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 27,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"id": 159,
						"name": "GiveawaysManagerOptions"
					}
				},
				{
					"id": 37,
					"name": "ready",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 28,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 26,
					"name": "captureRejectionSymbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 273,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 26,
							"name": "captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 27,
					"name": "captureRejections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sets or gets the default captureRejection value for all emitters."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 278,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 28,
					"name": "defaultMaxListeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 279,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 25,
					"name": "errorMonitor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.",
						"text": "Installing a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 272,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 25,
							"name": "errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 89,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 90,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Alias for `emitter.on(eventName, listener)`.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 91,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 92,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 93,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 94,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 95,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 38,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 30,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 40,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41,
									"name": "doNotDeleteMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "deleteGiveaway",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 31,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "deleteGiveaway",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 44,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "edit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 32,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "edit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 47,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 48,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 385,
										"name": "GiveawayEditOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 48,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 86,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 214,
											"name": "GiveawaysManagerEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 87,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 88,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 214,
											"name": "GiveawaysManagerEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.emit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 49,
					"name": "end",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 33,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 50,
							"name": "end",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 51,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 52,
									"name": "noWinnerMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 211,
												"name": "MessageObject"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "GuildMember"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "eventNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 142,
							"name": "eventNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.",
								"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 116,
					"name": "getMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 117,
							"name": "getMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
								"tags": [
									{
										"tag": "since",
										"text": "v1.0.0\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 124,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 125,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the number of listeners listening to the event named `eventName`.",
								"tags": [
									{
										"tag": "since",
										"text": "v3.2.0"
									}
								]
							},
							"parameters": [
								{
									"id": 126,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event being listened for\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 118,
					"name": "listeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 119,
							"name": "listeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`.",
								"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 120,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 103,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 104,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Alias for `emitter.removeListener()`.",
								"tags": [
									{
										"tag": "since",
										"text": "v10.0.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 105,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 106,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 107,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 108,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 109,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 68,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 38,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 70,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 214,
											"name": "GiveawaysManagerEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 72,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 73,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 74,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 75,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"name": "K"
																},
																"objectType": {
																	"type": "reference",
																	"id": 214,
																	"name": "GiveawaysManagerEvents"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 76,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 43,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 78,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 214,
											"name": "GiveawaysManagerEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 79,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"id": 80,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 81,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 82,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 83,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"name": "K"
																},
																"objectType": {
																	"type": "reference",
																	"id": 214,
																	"name": "GiveawaysManagerEvents"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 61,
					"name": "pause",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 36,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "pause",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 63,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 64,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 153,
										"name": "PauseOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 127,
					"name": "prependListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 128,
							"name": "prependListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.",
								"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0"
									}
								]
							},
							"parameters": [
								{
									"id": 129,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 130,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 131,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 132,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 133,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 134,
					"name": "prependOnceListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 135,
							"name": "prependOnceListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.",
								"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0"
									}
								]
							},
							"parameters": [
								{
									"id": 136,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 137,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 138,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 139,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 140,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 121,
					"name": "rawListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 122,
							"name": "rawListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).",
								"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v9.4.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 123,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 110,
					"name": "removeAllListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 111,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Removes all listeners, or those of the specified `eventName`.",
								"text": "It is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 112,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 96,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 97,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Removes the specified `listener` from the listener array for the event named`eventName`.",
								"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 98,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 99,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 100,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 101,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 102,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 53,
					"name": "reroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 34,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "reroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 55,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 395,
										"name": "GiveawayRerollOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "GuildMember"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 113,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 114,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.",
								"text": "Returns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.3.5\n"
									}
								]
							},
							"parameters": [
								{
									"id": 115,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "GiveawaysManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 57,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 35,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 59,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TextChannel"
											},
											{
												"type": "reference",
												"name": "NewsChannel"
											},
											{
												"type": "reference",
												"name": "ThreadChannel"
											}
										]
									}
								},
								{
									"id": 60,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 174,
										"name": "GiveawayStartOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 65,
					"name": "unpause",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 37,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "unpause",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 67,
									"name": "messageId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 221,
										"name": "Giveaway"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "getEventListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 262,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "getEventListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`.",
								"text": "For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v15.2.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 23,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "DOMEventTarget"
											},
											{
												"type": "reference",
												"name": "EventEmitter"
											}
										]
									}
								},
								{
									"id": 24,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 17,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 234,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 18,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.",
								"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.9.12"
									},
									{
										"tag": "deprecated",
										"text": "Since v3.2.0 - Use `listenerCount` instead."
									}
								]
							},
							"parameters": [
								{
									"id": 19,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The emitter to query"
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter"
									}
								},
								{
									"id": 20,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The event name\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 12,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 217,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 13,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "```js\nconst { on, EventEmitter } = require('events');",
								"text": "(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```",
								"returns": "that iterates `eventName` events emitted by the `emitter`\n",
								"tags": [
									{
										"tag": "since",
										"text": "v13.6.0, v12.16.0"
									}
								]
							},
							"parameters": [
								{
									"id": 14,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter"
									}
								},
								{
									"id": 15,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"text": "The name of the event being listened for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 16,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 3,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 157,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.",
								"text": "This method is intentionally generic and works with the web platform[EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v11.13.0, v10.16.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 5,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "NodeEventTarget"
									}
								},
								{
									"id": 6,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 7,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 8,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 9,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "DOMEventTarget"
									}
								},
								{
									"id": 10,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.once"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						29
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						34,
						35,
						36,
						37,
						26,
						27,
						28,
						25
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						89,
						38,
						42,
						45,
						84,
						49,
						141,
						116,
						124,
						118,
						103,
						68,
						76,
						61,
						127,
						134,
						121,
						110,
						96,
						53,
						113,
						57,
						65,
						21,
						17,
						12,
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 22,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EventEmitter"
				}
			]
		},
		{
			"id": 143,
			"name": "BonusEntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 147,
					"name": "cumulative",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 52,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 144,
					"name": "bonus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 145,
							"name": "bonus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 146,
									"name": "member",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "GuildMember"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						147
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						144
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 50,
					"character": 14
				}
			]
		},
		{
			"id": 401,
			"name": "GiveawayData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 424,
					"name": "allowedMentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 220,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "MessageMentionOptions"
					}
				},
				{
					"id": 415,
					"name": "bonusEntries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 211,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 407,
					"name": "channelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 203,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 416,
					"name": "embedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 212,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 417,
					"name": "embedColorEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 213,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 403,
					"name": "endAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 199,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 409,
					"name": "ended",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 205,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 414,
					"name": "exemptMembers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 210,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 413,
					"name": "exemptPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 209,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable"
						}
					}
				},
				{
					"id": 420,
					"name": "extraData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 216,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 408,
					"name": "guildId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 204,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 419,
					"name": "hostedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 215,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 423,
					"name": "isDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 219,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 421,
					"name": "lastChance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 217,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 148,
						"name": "LastChanceOptions"
					}
				},
				{
					"id": 411,
					"name": "messageId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 207,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 405,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 201,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 195,
								"name": "GiveawaysMessages"
							}
						],
						"name": "Required"
					}
				},
				{
					"id": 422,
					"name": "pauseOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 218,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 153,
						"name": "PauseOptions"
					}
				},
				{
					"id": 406,
					"name": "prize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 202,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 412,
					"name": "reaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 208,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "EmojiIdentifierResolvable"
					}
				},
				{
					"id": 402,
					"name": "startAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 198,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 418,
					"name": "thumbnail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 214,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 404,
					"name": "winnerCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 200,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 410,
					"name": "winnerIds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 206,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						424,
						415,
						407,
						416,
						417,
						403,
						409,
						414,
						413,
						420,
						408,
						419,
						423,
						421,
						411,
						405,
						422,
						406,
						412,
						402,
						418,
						404,
						410
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 197,
					"character": 14
				}
			]
		},
		{
			"id": 385,
			"name": "GiveawayEditOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 388,
					"name": "addTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 182,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 392,
					"name": "newBonusEntries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 186,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 143,
							"name": "BonusEntry"
						}
					}
				},
				{
					"id": 393,
					"name": "newExtraData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 187,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 394,
					"name": "newLastChance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 188,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 148,
						"name": "LastChanceOptions"
					}
				},
				{
					"id": 390,
					"name": "newMessages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 184,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 195,
						"name": "GiveawaysMessages"
					}
				},
				{
					"id": 387,
					"name": "newPrize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 181,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 391,
					"name": "newThumbnail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 185,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 386,
					"name": "newWinnerCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 180,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 389,
					"name": "setEndTimestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 183,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						388,
						392,
						393,
						394,
						390,
						387,
						391,
						386,
						389
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 179,
					"character": 14
				}
			]
		},
		{
			"id": 395,
			"name": "GiveawayRerollOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 397,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 192,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 398,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 399,
									"name": "congrat",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 193,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 211,
												"name": "MessageObject"
											}
										]
									}
								},
								{
									"id": 400,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 194,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 211,
												"name": "MessageObject"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										399,
										400
									]
								}
							]
						}
					}
				},
				{
					"id": 396,
					"name": "winnerCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 191,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						397,
						396
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 190,
					"character": 14
				}
			]
		},
		{
			"id": 174,
			"name": "GiveawayStartOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 194,
					"name": "allowedMentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 99,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "MessageMentionOptions"
					}
				},
				{
					"id": 184,
					"name": "bonusEntries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 89,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 143,
							"name": "BonusEntry"
						}
					}
				},
				{
					"id": 179,
					"name": "botsCanWin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 86,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 177,
					"name": "duration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 84,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 185,
					"name": "embedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 90,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 186,
					"name": "embedColorEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 91,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 180,
					"name": "exemptPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 87,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable"
						}
					}
				},
				{
					"id": 190,
					"name": "extraData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 95,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 178,
					"name": "hostedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 85,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "User"
					}
				},
				{
					"id": 193,
					"name": "isDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 98,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 191,
					"name": "lastChance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 96,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 148,
						"name": "LastChanceOptions"
					}
				},
				{
					"id": 188,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 93,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 195,
						"name": "GiveawaysMessages"
					}
				},
				{
					"id": 192,
					"name": "pauseOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 97,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 153,
						"name": "PauseOptions"
					}
				},
				{
					"id": 175,
					"name": "prize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 82,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 187,
					"name": "reaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 92,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "EmojiIdentifierResolvable"
					}
				},
				{
					"id": 189,
					"name": "thumbnail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 94,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 176,
					"name": "winnerCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 83,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 181,
					"name": "exemptMembers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 88,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "exemptMembers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 183,
									"name": "member",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GuildMember"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						194,
						184,
						179,
						177,
						185,
						186,
						180,
						190,
						178,
						193,
						191,
						188,
						192,
						175,
						187,
						189,
						176
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						181
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 81,
					"character": 14
				}
			]
		},
		{
			"id": 214,
			"name": "GiveawaysManagerEvents",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 220,
					"name": "endedGiveawayReactionAdded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 125,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							{
								"type": "reference",
								"name": "GuildMember"
							},
							{
								"type": "reference",
								"name": "MessageReaction"
							}
						]
					}
				},
				{
					"id": 215,
					"name": "giveawayDeleted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 120,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							}
						]
					}
				},
				{
					"id": 216,
					"name": "giveawayEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 121,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "GuildMember"
								}
							}
						]
					}
				},
				{
					"id": 218,
					"name": "giveawayReactionAdded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 123,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							{
								"type": "reference",
								"name": "GuildMember"
							},
							{
								"type": "reference",
								"name": "MessageReaction"
							}
						]
					}
				},
				{
					"id": 219,
					"name": "giveawayReactionRemoved",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 124,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							{
								"type": "reference",
								"name": "GuildMember"
							},
							{
								"type": "reference",
								"name": "MessageReaction"
							}
						]
					}
				},
				{
					"id": 217,
					"name": "giveawayRerolled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 122,
							"character": 8
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"id": 221,
								"name": "Giveaway"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "GuildMember"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						220,
						215,
						216,
						218,
						219,
						217
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 119,
					"character": 14
				}
			]
		},
		{
			"id": 159,
			"name": "GiveawaysManagerOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 163,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 71,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 164,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 165,
									"name": "botsCanWin",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 72,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 170,
									"name": "embedColor",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 75,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "ColorResolvable"
									}
								},
								{
									"id": 171,
									"name": "embedColorEnd",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 76,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "ColorResolvable"
									}
								},
								{
									"id": 166,
									"name": "exemptPermissions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 73,
											"character": 12
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PermissionResolvable"
										}
									}
								},
								{
									"id": 173,
									"name": "lastChance",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 78,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"id": 148,
										"name": "LastChanceOptions"
									}
								},
								{
									"id": 172,
									"name": "reaction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 77,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "EmojiIdentifierResolvable"
									}
								},
								{
									"id": 167,
									"name": "exemptMembers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "typings/index.d.ts",
											"line": 74,
											"character": 12
										}
									],
									"signatures": [
										{
											"id": 168,
											"name": "exemptMembers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 169,
													"name": "member",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "GuildMember"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										165,
										170,
										171,
										166,
										173,
										172
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										167
									]
								}
							]
						}
					}
				},
				{
					"id": 162,
					"name": "endedGiveawaysLifetime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 70,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 161,
					"name": "forceUpdateEvery",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 69,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 160,
					"name": "storage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 68,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						163,
						162,
						161,
						160
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 67,
					"character": 14
				}
			]
		},
		{
			"id": 195,
			"name": "GiveawaysMessages",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 201,
					"name": "drawing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 107,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 202,
					"name": "dropMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 108,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 203,
					"name": "embedFooter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 109,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 204,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 206,
											"name": "iconURL",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "typings/index.d.ts",
													"line": 109,
													"character": 48
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 205,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "typings/index.d.ts",
													"line": 109,
													"character": 33
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												206,
												205
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 209,
					"name": "endedAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 196,
					"name": "giveaway",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 102,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 197,
					"name": "giveawayEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 103,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "hostedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 113,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 198,
					"name": "inviteToParticipate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 104,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 207,
					"name": "noWinner",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 110,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 199,
					"name": "timeRemaining",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 105,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 200,
					"name": "winMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 106,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 211,
								"name": "MessageObject"
							}
						]
					}
				},
				{
					"id": 208,
					"name": "winners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 111,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						201,
						202,
						203,
						209,
						196,
						197,
						210,
						198,
						207,
						199,
						200,
						208
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 101,
					"character": 14
				}
			]
		},
		{
			"id": 148,
			"name": "LastChanceOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 151,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 57,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 150,
					"name": "embedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 56,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 149,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 55,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 152,
					"name": "threshold",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 58,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						151,
						150,
						149,
						152
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 54,
					"character": 14
				}
			]
		},
		{
			"id": 211,
			"name": "MessageObject",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 212,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 116,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 213,
					"name": "embed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 117,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "MessageEmbed"
							},
							{
								"type": "reference",
								"name": "MessageEmbedOptions"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						212,
						213
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 115,
					"character": 14
				}
			]
		},
		{
			"id": 153,
			"name": "PauseOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 155,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 62,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 158,
					"name": "durationAfterPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 65,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 157,
					"name": "embedColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 64,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ColorResolvable"
					}
				},
				{
					"id": 154,
					"name": "isPaused",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 61,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 156,
					"name": "unPauseAfter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "typings/index.d.ts",
							"line": 63,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						155,
						158,
						157,
						154,
						156
					]
				}
			],
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 60,
					"character": 14
				}
			]
		},
		{
			"id": 1,
			"name": "version",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "typings/index.d.ts",
					"line": 21,
					"character": 17
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				221,
				2
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				143,
				401,
				385,
				395,
				174,
				214,
				159,
				195,
				148,
				211,
				153
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1
			]
		}
	],
	"sources": [
		{
			"fileName": "typings/index.d.ts",
			"line": 1,
			"character": 0
		}
	]
}